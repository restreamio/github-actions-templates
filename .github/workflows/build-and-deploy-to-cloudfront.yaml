name: Build and Deploy to Cloudfront
on:
  workflow_call:
    inputs:
      ecr-region:
        type: string
        default: "eu-central-1"
        required: false
      ecr-reposiroty-name:
        type: string
        default: ${{ github.event.repository.name }}
        required: false
      docker-context:
        type: string
        default: "./"
        required: false
      docker-file:
        type: string
        default: "./Dockerfile"
        required: false
      build-instance-type:
        type: string
        default: "xlarge"
        required: false
      s3-bucket-name:
        type: string
        required: true
      node-version:
        type: string
        default: "16"
        required: false
      cache-lock-file:
        type: string
        default: "**/yarn.lock"
        required: false
      release-dir:
        type: string
        default: "./dist"
        required: false

jobs:
  build:
    name: Build and upload to cloudfront
    runs-on: ["self-hosted", "${{ inputs.build-instance-type }}", "prod"]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        timeout-minutes: 1

      - name: Setup NodeJs and npm
        uses: actions/setup-node@v2
        timeout-minutes: 5
        with:
          node-version: ${{ inputs.node-version}}

      - name: Setup yarn
        run: npm install -g yarn
        timeout-minutes: 5

      - name: Get commit details
        id: github-commit-details
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=date::$(date +'%y.%m.%d%H%m')"
          echo "::set-output name=branch::$(echo ${{ github.head_ref }} | sed -e 's/\//_/g' -e 's/-/_/g' -e 's/./\L&/g')"
          echo "::set-output name=contributor::$(git log -1 --pretty=format:'%an' |  tr -d '\n')"
          echo "::set-output name=commit_hash::$(git rev-parse HEAD)"
        timeout-minutes: 1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        timeout-minutes: 1

      - name: Restore node_modules cache
        uses: actions/cache@v2
        id: yarn-cache
        timeout-minutes: 10
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ github.event.repository.name }}-yarn-${{ hashFiles( inputs.cache-lock-file ) }}
          restore-keys: |
            ${{ github.event.repository.name }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        timeout-minutes: 10

      - name: Build source code
        run: yarn build
        timeout-minutes: 15
        env:
          COMMIT_HASH: ${{ steps.github-commit-details.outputs.commit_hash }}

      - name: Deploy CloudFront
        if: github.ref == 'refs/heads/master'
        timeout-minutes: 15
        run: |
          cd ${{ inputs.release-dir }}
          aws s3 cp . "s3://${{ inputs.s3-bucket-name }}" --recursive --no-progress

      - name: Invalidation Cloudfront cache
        if: github.ref == 'refs/heads/master'
        timeout-minutes: 5
        env:
          ORIGIN: ${{ inputs.s3-bucket-name }}.s3.amazonaws.com
        run: |
          export DISTRIBUTIONS=$(aws cloudfront list-distributions \
            --query "DistributionList.Items[*].{id:Id,origin:Origins.Items[0].Id}[?origin=='${{ env.ORIGIN }}'].id" \
            --output text \
          )
          for id in $DISTRIBUTIONS; do
            aws cloudfront create-invalidation --distribution-id $id --paths "/*"
          done
