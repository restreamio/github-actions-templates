---
name: Build Docker Image
on:
  workflow_call:
    inputs:
      ecr_region:
        type: string
        default: "us-east-1"
        required: false
      ecr_region_eu:
        type: string
        default: "eu-central-1"
        required: false
      build_images:
        type: string
        required: false
        default: |-
          [
             {
               "container": "image",
               "docker_file": "./Dockerfile",
               "docker_context": "./",
               "runner_type": "ubuntu-amd64-4core",
               "ecr_repository_name": "${{ github.event.repository.name }}"
             }
          ]
      pr_open:
        type: boolean
        default: true
        required: false
      docker_additional_labels:
        type: string
        default: ""
        required: false
      docker_additional_args:
        type: string
        default: ""
        required: false
      pr_repos:
        type: string
        default: "k8s"
        required: false
      pr_command:
        type: string
        default: 'yq e ''(.spec.source.helm.parameters[] | select(.name == "image.tag")).value = env(IMAGE_TAG)'' -i ''kustomize/argocd/apps/${{ github.event.repository.name }}.yaml'''
        required: false
      concurrency_name:
        type: string
        default: "build"
        required: false
    secrets:
      gh_token:
        required: true

concurrency:
  group: ${{ github.event.repository.name }}-${{ inputs.concurrency_name }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions: write-all
#   id-token: write
#   contents: read
#   checks: write
#   statuses: write
#   pull-requests: write

jobs:
  build:
    name: Build ${{ matrix.container }}
    runs-on: ${{ matrix.runner_type }}
    outputs:
      date: ${{ steps.github-commit-details.outputs.date }}
      sha_short: ${{ steps.github-commit-details.outputs.sha_short }}
      branch: ${{ steps.github-commit-details.outputs.branch }}
      contributor: ${{ steps.github-commit-details.outputs.contributor }}
    strategy:
      matrix:
        include: ${{ fromJSON(inputs.build_images) }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        timeout-minutes: 1

      - name: Get commit details
        id: github-commit-details
        run: |
          echo "date=$(git show -s --date=format:'%y.%m.%d%H%M' --format=%cd)" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=$(echo ${{ github.head_ref }} | sed -e 's/\//_/g' -e 's/-/_/g' -e 's/./\L&/g')" >> $GITHUB_OUTPUT
          echo "contributor=$(git log -1 --pretty=format:'%an' |  tr -d '\n')" >> $GITHUB_OUTPUT
        timeout-minutes: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        timeout-minutes: 5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        timeout-minutes: 1
        with:
          role-to-assume: arn:aws:iam::318522186253:role/github-oidc-role
          aws-region: ${{ inputs.ecr_region }}

      - name: Login to Amazon US ECR
        id: login-ecr
        env:
          AWS_REGION: ${{ inputs.ecr_region }}
        timeout-minutes: 1
        uses: aws-actions/amazon-ecr-login@v2

      - name: Login to Amazon EU ECR
        id: login-ecr-eu
        env:
          AWS_REGION: ${{ inputs.ecr_region_eu }}
        timeout-minutes: 1
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag and push image to US
        uses: docker/build-push-action@v5
        if: github.ref != 'refs/heads/master'
        timeout-minutes: 60
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_NAME: ${{ matrix.ecr_repository_name }}
          IMAGE_TAG: ${{ steps.github-commit-details.outputs.date }}-${{ steps.github-commit-details.outputs.sha_short }}
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        with:
          context: ${{ matrix.docker_context }}
          file: ${{ matrix.docker_file }}
          push: true
          build-args: |
            BUILD_NUMBER=${{ env.IMAGE_TAG }}
            ${{ inputs.docker_additional_args }}
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:${{ env.IMAGE_TAG }}
          labels: |
            app.version=${{ env.IMAGE_TAG }}
            description=Restream ${{ env.ECR_REPOSITORY_NAME }} service
            git.branch=${{ steps.github-commit-details.outputs.branch }}
            git.commit=${{ steps.github-commit-details.outputs.sha_short }}
            git.contributor=${{ steps.github-commit-details.outputs.contributor }}
            com.datadoghq.tags.service=${{ env.ECR_REPOSITORY_NAME }}
            com.datadoghq.tags.version=${{ env.IMAGE_TAG }}
            ${{ inputs.docker_additional_labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build, tag and push image to EU
        uses: docker/build-push-action@v5
        if: github.ref != 'refs/heads/master'
        timeout-minutes: 60
        continue-on-error: true
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-eu.outputs.registry }}
          ECR_REPOSITORY_NAME: ${{ matrix.ecr_repository_name }}
          IMAGE_TAG: ${{ steps.github-commit-details.outputs.date }}-${{ steps.github-commit-details.outputs.sha_short }}
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        with:
          context: ${{ matrix.docker_context }}
          file: ${{ matrix.docker_file }}
          push: true
          build-args: |
            BUILD_NUMBER=${{ env.IMAGE_TAG }}
            ${{ inputs.docker_additional_args }}
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:${{ env.IMAGE_TAG }}
          labels: |
            app.version=${{ env.IMAGE_TAG }}
            description=Restream ${{ env.ECR_REPOSITORY_NAME }} service
            git.branch=${{ steps.github-commit-details.outputs.branch }}
            git.commit=${{ steps.github-commit-details.outputs.sha_short }}
            git.contributor=${{ steps.github-commit-details.outputs.contributor }}
            com.datadoghq.tags.service=${{ env.ECR_REPOSITORY_NAME }}
            com.datadoghq.tags.version=${{ env.IMAGE_TAG }}
            ${{ inputs.docker_additional_labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Tag prod and latest for master branch in US
        uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/master'
        timeout-minutes: 60
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_NAME: ${{ matrix.ecr_repository_name }}
          IMAGE_TAG: ${{ steps.github-commit-details.outputs.date }}-${{ steps.github-commit-details.outputs.sha_short }}
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        with:
          context: ${{ matrix.docker_context }}
          file: ${{ matrix.docker_file }}
          push: true
          build-args: |
            BUILD_NUMBER=${{ env.IMAGE_TAG }}
            ${{ inputs.docker_additional_args }}
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:prod-${{ env.IMAGE_TAG }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:latest
          labels: |
            app.version=${{ env.IMAGE_TAG }}
            description=Restream ${{ env.ECR_REPOSITORY_NAME }} service
            git.branch=${{ steps.github-commit-details.outputs.branch }}
            git.commit=${{ steps.github-commit-details.outputs.sha_short }}
            git.contributor=${{ steps.github-commit-details.outputs.contributor }}
            com.datadoghq.tags.service=${{ env.ECR_REPOSITORY_NAME }}
            com.datadoghq.tags.version=${{ env.IMAGE_TAG }}
            ${{ inputs.docker_additional_labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Tag prod and latest for master branch in EU
        uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/master'
        timeout-minutes: 60
        continue-on-error: true
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-eu.outputs.registry }}
          ECR_REPOSITORY_NAME: ${{ matrix.ecr_repository_name }}
          IMAGE_TAG: ${{ steps.github-commit-details.outputs.date }}-${{ steps.github-commit-details.outputs.sha_short }}
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        with:
          context: ${{ matrix.docker_context }}
          file: ${{ matrix.docker_file }}
          push: true
          build-args: |
            BUILD_NUMBER=${{ env.IMAGE_TAG }}
            ${{ inputs.docker_additional_args }}
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:prod-${{ env.IMAGE_TAG }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:latest
          labels: |
            app.version=${{ env.IMAGE_TAG }}
            description=Restream ${{ env.ECR_REPOSITORY_NAME }} service
            git.branch=${{ steps.github-commit-details.outputs.branch }}
            git.commit=${{ steps.github-commit-details.outputs.sha_short }}
            git.contributor=${{ steps.github-commit-details.outputs.contributor }}
            com.datadoghq.tags.service=${{ env.ECR_REPOSITORY_NAME }}
            com.datadoghq.tags.version=${{ env.IMAGE_TAG }}
            ${{ inputs.docker_additional_labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  pr:
    name: Open pull request
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Leave comment with created image
        if: github.ref == 'refs/heads/master'
        uses: peter-evans/commit-comment@v3
        timeout-minutes: 1
        env:
          IMAGE_TAG: prod-${{ needs.build.outputs.date }}-${{ needs.build.outputs.sha_short }}
        with:
          body: |
            Image has been built: `${{ env.IMAGE_TAG }}`

      - name: Set IMAGE_TAG based on git ref for status check summary
        id: set_image_tag
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "summary_image_tag=${{ needs.build.outputs.date }}-${{ needs.build.outputs.sha_short }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "summary_image_tag=prod-${{ needs.build.outputs.date }}-${{ needs.build.outputs.sha_short }}" >> $GITHUB_OUTPUT
          fi

      - name: Print image tag in status check summary
        uses: restreamio/github-status-action@v1.1.6
        timeout-minutes: 1
        env:
          IMAGE_TAG: ${{ steps.set_image_tag.outputs.summary_image_tag }}
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: "${{ github.workflow }} / CI / Image tag"
          description: "${{ env.IMAGE_TAG }}"
          state: "success"
          sha: ${{github.event.pull_request.head.sha || github.sha}}

      - name: Install YQ
        if: github.ref == 'refs/heads/master' && inputs.pr_open
        timeout-minutes: 2
        uses: chrisdickinson/setup-yq@latest

      - name: Create git commits
        if: github.ref == 'refs/heads/master' && inputs.pr_open
        timeout-minutes: 1
        env:
          IMAGE_TAG: prod-${{ needs.build.outputs.date }}-${{ needs.build.outputs.sha_short }}
          GIT_TOKEN: ${{ secrets.gh_token }}
        run: |-
          git clone "https://$GIT_TOKEN@github.com/restreamio/${{ inputs.pr_repos }}.git"
          cd ${{ inputs.pr_repos }}
          ${{ inputs.pr_command }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6.0.5
        if: github.ref == 'refs/heads/master' && inputs.pr_open
        timeout-minutes: 1
        env:
          IMAGE_TAG: prod-${{ needs.build.outputs.date }}-${{ needs.build.outputs.sha_short }}
          AUTHOR_NAME: restream-ci-bot
        with:
          branch: "bump-${{ github.event.repository.name }}"
          title: "bump: ${{ github.event.repository.name }}"
          body: |-
            author: [${{ github.event.head_commit.author.name }}](https://github.com/${{ github.event.head_commit.author.username }})
            repos: [${{ github.event.repository.full_name }}](${{ github.event.repository.html_url }})
            commit: [link](${{ github.event.head_commit.url }})
            message: ${{ github.event.head_commit.message }}
          commit-message: "bump: ${{ github.event.repository.name }} to ${{ env.IMAGE_TAG }}"
          committer: GitHub <noreply@github.com>
          author: restream-ci-bot <restream-ci-bot@users.noreply.github.com>
          delete-branch: true
          path: ${{ inputs.pr_repos }}
          token: ${{ secrets.gh_token }}
