---
name: Build and deploy to S3 QA

concurrency:
  group: ${{ inputs.concurrency_name }}
  cancel-in-progress: true

permissions:
  actions: write # mark parent workflow as failed, delete caches
  checks: write # create checks
  contents: read # list refs
  id-token: write # fetch OIDC token from AWS IAM
  pull-requests: write # create PRs comments
  statuses: write # update commit statuses in parent workflow

on:
  workflow_call:
    inputs:
      # =====
      # Setup
      # =====
      instance_type:
        type: string
        default: ubuntu-arm64-8core
        required: false
      node_version:
        type: string
        # If set to '' version will be extracted from .nvmrc file
        default: "16"
        required: false
      node_options:
        type: string
        required: false
      package_manager:
        type: string
        default: yarn
        required: false
      # =====
      # Build
      # =====
      build_command:
        type: string
        default: yarn build
        required: false
      build_cache_path:
        type: string
        required: false
      build_path:
        type: string
        default: ./dist
        required: false
      # ======
      # Deploy
      # ======
      s3_bucket_name:
        type: string
        required: true
      custom_domain_name:
        type: string
        required: false
        default: ${{ github.event.repository.name }}
      # ======
      # NX monorepo tools
      # ======
      with_nx:
        type: boolean
        default: false
        required: false
      nx_force_local_cache:
        type: string
        description: "Value for NX_REJECT_UNKNOWN_LOCAL_CACHE variable"
        required: false
        default: "0"
      concurrency_name:
        type: string
        default: "build-n-deploy-to-s3-qa"
        required: false

jobs:
  print-url:
    name: Print the url of QA build
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    timeout-minutes: 1
    steps:
      - name: Leave comment with domain name
        uses: mshick/add-pr-comment@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: |
            QA Build will be available here: [https://${{ inputs.custom_domain_name }}-pr-${{ github.event.pull_request.number }}.qa.restream.io](https://${{ inputs.custom_domain_name }}-pr-${{ github.event.pull_request.number }}.qa.restream.io)
  build:
    name: Build and deploy to S3
    runs-on: ${{ inputs.instance_type }}
    if: (github.event_name == 'pull_request' && github.event.action != 'closed' && github.event.pull_request.merged != true)
    steps:
      - name: Show context
        env:
          # To make debugging easier in case of issues
          GITHUB_CONTEXT_JSON: ${{ toJson(github) }}
          INPUTS_JSON: ${{ toJson(inputs) }}
        run: |
          echo Github context: "$GITHUB_CONTEXT_JSON"
          echo Inputs: "$INPUTS_JSON"

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        timeout-minutes: 1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        timeout-minutes: 1
        with:
          role-to-assume: arn:aws:iam::318522186253:role/github-oidc-role
          aws-region: us-east-1

      - name: Setup Node
        uses: actions/setup-node@v4
        timeout-minutes: 5
        with:
          node-version: ${{ inputs.node_version }}
          node-version-file: .nvmrc
          cache: ${{ inputs.package_manager }}

      - name: Cache build
        if: inputs.build_cache_path
        timeout-minutes: 5
        uses: actions/cache@v4
        with:
          path: |
            ${{ inputs.build_cache_path }}
            ${{ inputs.build_cache_path == '.nx/cache' && '.nx/cache' || '' }}
          key: build-cache-${{ runner.arch }}-${{ (inputs.package_manager == 'yarn') && hashFiles('yarn.lock') || hashFiles('package-lock.json') }}-${{ inputs.build_cache_path == '.nx/cache' && hashFiles('nx.json') || '' }}
          restore-keys: |
            build-cache-${{ runner.arch }}-${{ (inputs.package_manager == 'yarn') && hashFiles('yarn.lock') || hashFiles('package-lock.json') }}-
            build-cache-${{ runner.arch }}-

      - name: Install dependencies
        run: ${{ (inputs.package_manager == 'yarn') && 'npm install -g yarn && yarn install --frozen-lockfile' || 'npm ci' }}
        timeout-minutes: 15

      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: "master"
        if: inputs.with_nx

      - run: git branch --track master origin/master
        if: ${{ github.event_name == 'pull_request'  && github.event.action != 'closed' && github.event.pull_request.merged != true && inputs.with_nx }}

      - name: Build
        run: ${{ inputs.build_command }}
        timeout-minutes: 15
        env:
          COMMIT_HASH: ${{ github.sha }}
          NODE_OPTIONS: ${{ inputs.node_options }}
          NX_REJECT_UNKNOWN_LOCAL_CACHE: ${{ inputs.nx_force_local_cache }}

      - name: Deploy to S3
        timeout-minutes: 15
        run: |
          cd ${{ inputs.build_path }}
          aws s3 cp . "s3://${{ inputs.s3_bucket_name }}/${{ github.event.pull_request.number }}" --recursive --no-progress --exclude "*.js.map"

  cleanup:
    name: Cleanup Actions Caches
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request' && github.event.action == 'closed') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        timeout-minutes: 1
        with:
          role-to-assume: arn:aws:iam::318522186253:role/github-oidc-role
          aws-region: us-east-1

      - name: Delete S3 directory on PR close
        run: |
          aws s3 rm s3://${{ inputs.s3_bucket_name }}/${{ github.event.pull_request.number }} --recursive

      - name: Clean Actions caches
        uses: restreamio/github-actions-templates/composite-actions/clean-caches@master
        with:
          ref: "refs/pull/${{ github.event.pull_request.number }}/merge"
          per_page: 50
          page: 1
          sort: "last_accessed_at"
          direction: "desc"
          github_token: ${{ secrets.GITHUB_TOKEN }}
